### web
server.port=8080
server.context-path=/xxl-job-admin

### resources
spring.mvc.static-path-pattern=/static/**
spring.resources.static-locations=classpath:/static/

### freemarker
spring.freemarker.templateLoaderPath=classpath:/templates/
spring.freemarker.suffix=.ftl
spring.freemarker.charset=UTF-8
spring.freemarker.request-context-attribute=request
spring.freemarker.settings.number_format=0.##########

### mybatis
mybatis.mapper-locations=classpath:/mybatis-mapper/*Mapper.xml

### xxl-job, datasource
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/xxl_job?Unicode=true&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=pass@123
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

spring.datasource.type=org.apache.tomcat.jdbc.pool.DataSource
spring.datasource.tomcat.max-wait=10000
spring.datasource.tomcat.max-active=30
spring.datasource.tomcat.test-on-borrow=true
spring.datasource.tomcat.validation-query=SELECT 1
spring.datasource.tomcat.validation-interval=30000

### xxl-job email
spring.mail.host=smtp.qq.com
spring.mail.port=25
spring.mail.username=xxx@qq.com
spring.mail.password=xxx
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory

## 是否启用flyway
flyway.enabled=true
## 编码格式，默认UTF-8
flyway.encoding=UTF-8
## 迁移sql脚本文件存放路径，默认db/migration
flyway.locations=classpath:db/migration
## 迁移sql脚本文件名称的前缀，默认V
flyway.sql-migration-prefix=V
## 迁移sql脚本文件名称的分隔符，默认2个下划线__
flyway.sql-migration-separator=__
## 迁移sql脚本文件名称的后缀
flyway.sql-migration-suffixes=.sql
## 迁移时是否进行校验，默认true
flyway.validate-on-migrate=true
#设定需要flywary迁移的schema，大小写敏感，默认为连接默认的schema
#flyway.schemas=public
#该值可以以微服务名起始，后面加上schema_version
flyway.table=xxl_job_schema_version
#设置为true，当迁移发现数据库非空且存在没有元数据的表时，自动执行基准迁移，SCHEMA_VERSION(默认表名，
#自定义表名可参考参数table的值)
flyway.baseline-on-migrate=true
#是否允许无序的迁移，默认false，对于开发环境, 可能是多人协作开发,
#很可能先apply了自己本地的最新SQL代码,然后发现其他同事早先时候提交的SQL代码还没有apply,
#所以开发环境应该设置true,这样flyway将能加载漏掉的老版本SQL文件，生产环境可以设置为false
flyway.out-of-order=true
#执行基线时用来标记已有Schema的版本，默认值为1
flyway.baseline-version=1.0.0
flyway.baseline-description="初始化"

### xxl-job, access token
xxl.job.accessToken=

### xxl-job, i18n (default empty as chinese, "en" as english)
xxl.job.i18n=
